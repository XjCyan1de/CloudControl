cloud_control.service.service_port_bind_retry_message = "CloudControl failed to bind on port %port%. Trying again with %next_port%..."

cloud_control.load.task = "Loading task from %path%..."
cloud_control.load.task.failed = "Failed to load task from %path%"
cloud_control.load.task.success = "Successfully loaded task %name% from %path%"

cloud_service.manager.max_memory_error = "The maximum allocatable memory has been reached! Please stop other services in the cloud to start them! In the background the Cloud will try to provide this service"
cloud_service.manager.cpu_usage_to_high_error = "The CPU load is too high to create a new service! Please stop other services in the cloud to start them! In the background the Cloud will try to provide this service"

cloud_service.pre_prepared = "CloudService [uniqueId=%id% task=%task% name=%task%-%service_id%] is being prepared..."
cloud_service.post_prepared = "CloudService [uniqueId=%id% task=%task% name=%task%-%service_id%] has been prepared"
cloud_service.pre_start_prepared = "CloudService [uniqueId=%id% task=%task% name=%task%-%service_id%] Preparing to start..."
cloud_service.post_start_prepared = "CloudService [uniqueId=%id% task=%task% name=%task%-%service_id%] The boot process has been prepared"
cloud_service.pre_start = "CloudService [uniqueId=%id% task=%task% name=%task%-%service_id%] is started..."
cloud_service.post_start = "CloudService [uniqueId=%id% task=%task% name=%task%-%service_id%] is starts"

cloud_service.include_template = "Installing to CloudService [uniqueId=%id% task=%task% name=%task%-%service_id%] the template %template% of the memory %storage%..."
cloud_service.deploy = "CloudService [uniqueId=%id% task=%task% name=%task%-%service_id%] will be copied to the template %template% in the storage %storage%..."

template_installer.downloading.begin = "Downloading from %url%"
template_installer.downloading.completed = "Successfully downloaded from %url%"

ca.question.list.question_list = "You have to provide one of the following: %values%"
ca.question.list.invalid_default = "Please provide a valid value!"